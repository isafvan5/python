class ListNode:
    def __init__(self, value=0, next=None):
        self.value = value
        self.next = next

class SinglyLinkedList:
    def __init__(self):
        self.head = None

    def is_empty(self):
        return self.head is None

    def add_at_head(self, value):
        new_node = ListNode(value)
        new_node.next = self.head
        self.head = new_node

    def add_at_tail(self, value):
        new_node = ListNode(value)
        if self.head is None:
            self.head = new_node
        else:
            current = self.head
            while current.next:
                current = current.next
            current.next = new_node

    def delete_at_head(self):
        if self.head:
            self.head = self.head.next

    def print_list(self):
        current = self.head
        while current:
            print(current.value, end=" -> ")
            current = current.next
        print("None")

# Example usage for Singly Linked List:
if __name__ == '__main__':
    singly_linked_list = SinglyLinkedList()
    singly_linked_list.add_at_head(10)
    singly_linked_list.add_at_tail(20)
    singly_linked_list.add_at_tail(30)
    singly_linked_list.print_list()  # Output: 10 -> 20 -> 30 -> None
    singly_linked_list.delete_at_head()
    singly_linked_list.print_list()  # Output: 20 -> 30 -> None
